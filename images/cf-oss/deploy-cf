#!/bin/bash
set -euxo pipefail

export CACHE_DIR=${CACHE_DIR:-/var/vcap/cache}
export CF_DIR=/var/vcap/cf
export CF_DOMAIN=v3.pcfdev.io
export CF_ORG=cfdev-org
export CF_SPACE=cfdev-space
export HOST_IP="${HOST_IP:-192.168.65.1}"
export DOCKER_REGISTRIES="${DOCKER_REGISTRIES:-[\"host.pcfdev.io:5000\"]}"

mkdir -p "${CF_DIR}"

exec 1> >(tee -i "${CF_DIR}/deploy.log")
exec 2>&1

source /var/vcap/director/env

cp "$CACHE_DIR"/deployment.yml "$CF_DIR"

if [ -f "$CACHE_DIR"/cloud-config.yml ]; then
  bosh -n update-cloud-config "$CACHE_DIR"/cloud-config.yml
fi
if [ -f "$CACHE_DIR"/runtime-config.yml ]; then
  bosh -n update-runtime-config "$CACHE_DIR"/runtime-config.yml --name=cf
fi

for filename in "$CACHE_DIR"/bosh-stemcell-*.tgz; do
  bosh --tty upload-stemcell "$filename"
done

for filename in "$CACHE_DIR"/releases/*.tgz; do
  bosh --tty upload-release "$filename"
done

if [ "$(curl -s -k "https://$BOSH_ENVIRONMENT:25555/info" | jq '.features.config_server.status')" == "true" ]; then
  bosh --tty --non-interactive --deployment cf \
    deploy "${CF_DIR}/deployment.yml" \
    -v system_domain="${CF_DOMAIN}" \
    -v host_ip="${HOST_IP}" \
    -v insecure_docker_registries="${DOCKER_REGISTRIES}" \
    --no-redact
else
  bosh --tty --non-interactive --deployment cf \
    deploy "${CF_DIR}/deployment.yml" \
    -v system_domain="${CF_DOMAIN}" \
    -v host_ip="${HOST_IP}" \
    -v insecure_docker_registries="${DOCKER_REGISTRIES}" \
    --no-redact \
    --vars-store "${CF_DIR}/vars.yml"
fi

cf api "api.${CF_DOMAIN}" --skip-ssl-validation
cf auth admin admin
cf enable-feature-flag diego_docker

cf create-user user pass
cf create-org "${CF_ORG}"
cf create-space "${CF_SPACE}" -o "${CF_ORG}"

cf set-org-role user "${CF_ORG}" OrgManager
cf set-space-role user "${CF_ORG}" "${CF_SPACE}" SpaceManager
cf set-space-role user "${CF_ORG}" "${CF_SPACE}" SpaceDeveloper
cf set-space-role user "${CF_ORG}" "${CF_SPACE}" SpaceAuditor

cf create-security-group all_access /etc/cf/app-security-group.json
cf bind-staging-security-group all_access
cf bind-running-security-group all_access
